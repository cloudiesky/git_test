* front end flow

** introduction

Lynx是联合开发平台。
任务脚本，svn，项目管理的集合。
项目成员可以基于平台完成任务，项目经理可以掌握项目的进展。

** basic usage

1. 启动命令：rtm_shell -gui -rm

2. 启动目录：FE_FLOW

3. 相关脚本：该部分内容与与项目共有，项目会配置好。

   1) system.tcl.工具控制，任务属性。

      - FE_flow/script_global/conf/system.tcl.
      - env, job distribution, metrics, misc.
      - project, revision control, tool versions. 

   2) common.tcl. 模块设置，库变量，层次设置。

      - FE_flow/script_global/conf/common.tcl
      - Auto variable expansion, Block Specific, DFT, Design Planning,
      - Hier, Power, Route, Tags, Tec-DRC/LVS...        

   3) block.tcl. 模块设置，库变量，层次设置

      - FE_flow/LEVELSYNCBLOCK/scripts_block/conf/block.tcl
      - 与common内容一致。

** edit flow. 

流程工作，设置流程。

*** TEV

单个流程，相关设置。

- topModuleName
- hdlFilePath
- tc_list_file
- partial_sim_cmd

*** 相关指令  

- run_flow
- run_task
- check_log

* units
** unit 3 reporting
*** Intro
**** QoR viewer(RTM feature); 
- designer's need; 
- based on transient data in the work area
**** management cockpit
- PM needs for progress tracking and status reports
- based on the persistent data stored in the Metrics server
*** QoR viewer
**** how report generate
***** types of reports
****** built in 
- analyzing timing and power, cannot be modified
****** user define reports
- can be applied to any type of flow
- some standard lynx RTL2GDSII reports
- 3 user defined report types
  - flow summary
  - table
  - matrix
***** how report data is generated
****** extraced from tool report and log file, whena a task is ran
******* resource data( host, runtime, memory), always extract
******* QoR data (WNS, power, clock tree) when(SEV(metrics_enable_generation)=1)
****** report are much short in json format
- json similar to xml
****** key procedures
- sproc_metric_system(script_global/conf/procs.tcl) resource
- sproc_metric_main(script_global/procs_metrics.tcl) (script_global/conf/procs_qor.tcl) QoR
*****  user define report naming convention
.qor can be convert in to different view format(matrix, table, flow_summary)
**** commands and Default Reports
***** QoR viewer
- RTM main window, Report icon.
***** QoR Viewer quick reference 
- tool bar are common optins, output options, report specific options.
***** scenario matrix report
- built in report for timing/power scenario analysis
***** multi block scenario compare
- built in report
***** scenario trend
- analyze timing/power for each task in the flow
- built in report
***** path browser
- browse timing path for selected task
- built in report
***** clock tree matrix
- report clock tree timing and skew
***** clock tree summary
- clock tree report for selected task
***** design summary
- report QoR metrics per task in a flow
***** resource sumary
- report compute resources per task in a flow
***** comparing block
- compare blocks in a flow
***** report specifications
save and load report layout
***** coloring rules
display colors
***** plotting data
different selections -> different plots
***** QoR viewer state
- refresh state
*** management cockpit
**** overview
***** lynx metrics capture architecture
- a metric and database server
  generate by the flow and transferrd to the metrics server
- two interface
  - desktop client(generate/view report, admin functions)
  - web portal(view reports)
***** what is metric
- special formatted messages in the /logfile/.
- format
  SNPS_INFO : METRIC | <metric-type> <metric-name> | <metric-value>
- types
  boolean, double, file, integer, percent, string, tag, time, timestamp
***** what metrics are generated
- system metrics :: fixed set of system related for all tasks
  - SYS :: system info
- design metrics :: QoR related metrics
  - INFO, SYS, LOGICAL, PHYSCAL, STA, PWR, ATPG, VERIFY, TAG
- hier, group use period(.)
***** How are metrics generated  
- system merics :: sproc_metric_system, (scripts_global/conf/procs.tcl)
- default design metrics :: (script_global/conf/procs_metrics.tcl)
  - sproc_metric_main :: (STA,LOGICAL,PWR...)
  - sproc_metric_verify :: (VERIFY)
  - sproc_metric_atpg :: (ATPG)
  - sproc_metric_tags :: (Automatic Tags)
***** adding new metrics
example
#+BEGIN_SRC tcl
sproc_msg -info "METRIC | INTER LOGICAL.NUM_REGS | [sizeof [all_registers]]"
#+end_src
results is
#+BEGIN_SRC tcl
sproc_msg -info "METRIC | INTER LOGICAL.NUM_REGS | 57916"
#+END_SRC
***** control metrics capture
what will be genrate
***** metric records
records like a table. 
each row are a task.
columns may not be the same in different row.
***** metrics failure diagnosis
- symptoms :: fail file no erorrs, logfile no errors
- causes :: server down, wrong setting SEV(metrics_server) SEV(metrics_port)
**** creating and viewing reports
***** management corkpit web portal
- 2 function
  - downloading the desktop client
  - view report output
****** web portal
- login on web
- downloading the destop client and help
- report page, allow user to view report outputs without Desktop Client
***** management corkpit Desktop Client
- create report spec and view output
- browsing metrics data
- admin
****** Desktop Client
.jar
******* login
******* report folder
******* new reports
******* report spec and report images
******* report specifiation
******* record filtering
******* dashboard summary report
******* auto reports
******* other functions
*** Adaptive Resource Optimizer(ARO)
compute farm optimizing

** unit 4
** unit 5
** unit 6
** unit 7
